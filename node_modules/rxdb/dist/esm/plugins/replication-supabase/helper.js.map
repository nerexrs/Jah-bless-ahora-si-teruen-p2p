{"version":3,"file":"helper.js","names":["POSTGRES_INSERT_CONFLICT_CODE","DEFAULT_MODIFIED_FIELD","DEFAULT_DELETED_FIELD","addDocEqualityToQuery","jsonSchema","deletedField","modifiedField","doc","query","ignoreKeys","Set","key","Object","keys","has","v","type","eq","is","Error","schemaProps","properties","hasOwn","_deleted"],"sources":["../../../../src/plugins/replication-supabase/helper.ts"],"sourcesContent":["import { SupabaseClient } from '@supabase/supabase-js';\nimport { RxDocumentData, RxJsonSchema, WithDeleted } from '../../types';\n\nexport const POSTGRES_INSERT_CONFLICT_CODE = \"23505\";\nexport const DEFAULT_MODIFIED_FIELD = '_modified';\nexport const DEFAULT_DELETED_FIELD = '_deleted';\n\n\nexport function addDocEqualityToQuery<RxDocType>(\n    jsonSchema: RxJsonSchema<RxDocumentData<RxDocType>>,\n    deletedField: string,\n    modifiedField: string,\n    doc: WithDeleted<RxDocType>,\n    query: any\n) {\n    const ignoreKeys = new Set([\n        modifiedField,\n        deletedField,\n        '_meta',\n        '_attachments',\n        '_rev'\n    ]);\n\n    for (const key of Object.keys(doc)) {\n        if (\n            ignoreKeys.has(key)\n        ) {\n            continue;\n        }\n\n        const v = (doc as any)[key];\n        const type = typeof v;\n\n        if (type === \"string\" || type === \"number\") {\n            query = query.eq(key, v);\n        } else if (type === \"boolean\" || v === null) {\n            query = query.is(key, v);\n        } else if (type === 'undefined') {\n            query = query.is(key, null);\n        } else {\n            throw new Error(`unknown how to handle type: ${type}`)\n        }\n    }\n\n    const schemaProps: Record<string, any> = jsonSchema.properties;\n    for (const key of Object.keys(schemaProps)) {\n        if (\n            ignoreKeys.has(key) ||\n            Object.hasOwn(doc, key)\n        ) {\n            continue;\n        }\n        query = query.is(key, null);\n    }\n\n    query = query.eq(deletedField, doc._deleted);\n    if (schemaProps[modifiedField]) {\n        query = query.eq(modifiedField, (doc as any)[modifiedField]);\n    }\n\n\n    return query;\n}\n"],"mappings":"AAGA,OAAO,IAAMA,6BAA6B,GAAG,OAAO;AACpD,OAAO,IAAMC,sBAAsB,GAAG,WAAW;AACjD,OAAO,IAAMC,qBAAqB,GAAG,UAAU;AAG/C,OAAO,SAASC,qBAAqBA,CACjCC,UAAmD,EACnDC,YAAoB,EACpBC,aAAqB,EACrBC,GAA2B,EAC3BC,KAAU,EACZ;EACE,IAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CACvBJ,aAAa,EACbD,YAAY,EACZ,OAAO,EACP,cAAc,EACd,MAAM,CACT,CAAC;EAEF,KAAK,IAAMM,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACN,GAAG,CAAC,EAAE;IAChC,IACIE,UAAU,CAACK,GAAG,CAACH,GAAG,CAAC,EACrB;MACE;IACJ;IAEA,IAAMI,CAAC,GAAIR,GAAG,CAASI,GAAG,CAAC;IAC3B,IAAMK,IAAI,GAAG,OAAOD,CAAC;IAErB,IAAIC,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,QAAQ,EAAE;MACxCR,KAAK,GAAGA,KAAK,CAACS,EAAE,CAACN,GAAG,EAAEI,CAAC,CAAC;IAC5B,CAAC,MAAM,IAAIC,IAAI,KAAK,SAAS,IAAID,CAAC,KAAK,IAAI,EAAE;MACzCP,KAAK,GAAGA,KAAK,CAACU,EAAE,CAACP,GAAG,EAAEI,CAAC,CAAC;IAC5B,CAAC,MAAM,IAAIC,IAAI,KAAK,WAAW,EAAE;MAC7BR,KAAK,GAAGA,KAAK,CAACU,EAAE,CAACP,GAAG,EAAE,IAAI,CAAC;IAC/B,CAAC,MAAM;MACH,MAAM,IAAIQ,KAAK,kCAAgCH,IAAM,CAAC;IAC1D;EACJ;EAEA,IAAMI,WAAgC,GAAGhB,UAAU,CAACiB,UAAU;EAC9D,KAAK,IAAMV,IAAG,IAAIC,MAAM,CAACC,IAAI,CAACO,WAAW,CAAC,EAAE;IACxC,IACIX,UAAU,CAACK,GAAG,CAACH,IAAG,CAAC,IACnBC,MAAM,CAACU,MAAM,CAACf,GAAG,EAAEI,IAAG,CAAC,EACzB;MACE;IACJ;IACAH,KAAK,GAAGA,KAAK,CAACU,EAAE,CAACP,IAAG,EAAE,IAAI,CAAC;EAC/B;EAEAH,KAAK,GAAGA,KAAK,CAACS,EAAE,CAACZ,YAAY,EAAEE,GAAG,CAACgB,QAAQ,CAAC;EAC5C,IAAIH,WAAW,CAACd,aAAa,CAAC,EAAE;IAC5BE,KAAK,GAAGA,KAAK,CAACS,EAAE,CAACX,aAAa,EAAGC,GAAG,CAASD,aAAa,CAAC,CAAC;EAChE;EAGA,OAAOE,KAAK;AAChB","ignoreList":[]}